<?php

class Myfield extends \Fuel\Core\Fieldset_Field
{
    protected $template;
    protected $checked;
    protected $value1;
    protected $value2;
    protected $fields;

    function __construct($name, $label = '', array $attributes = array(), array $rules = array(), Fieldset $fieldset = null)
    {
        parent::__construct($name, $label, $attributes, $rules, $fieldset);
        $this->fields = [];
        $this->set_label('テスト');
        $this->fields[$name . '_1'] = new ChildField($name . '_1', $label, $attributes, $rules, $fieldset);
        $this->fields[$name . '_1']->add_rule('valid_string', 'numeric');
        $this->fields[$name . '_1']->set_label('入力項目1');
        $this->fields[$name . '_2'] = new ChildField($name . '_2', $label, $attributes, $rules, $fieldset);
        $this->fields[$name . '_2']->add_rule('valid_string', 'numeric');
        $this->fields[$name . '_2']->set_label('入力項目2');
    }

    public function setTemplate($template)
    {
        $this->template = $template;
    }

    public function build()
    {
        $text = str_replace('{field1}', "<input type='text' name=\"{$this->name}_1\" value=\"{$this->value1}\">", $this->template);
        $text = str_replace('{field2}', "<input type='text' name=\"{$this->name}_2\" value=\"{$this->value2}\">", $text);
        $text = str_replace('{checkbox}', "<input type=\"checkbox\" name=\"{$this->name}_check\" value=\"1\" " . ($this->checked ? 'checked' : '') . ">", $text);
        return $text;
    }

    public function input()
    {
        return [\Input::post($this->name . "_check"), \Input::post($this->name . "_1"), \Input::post($this->name . "_2")];
    }

    public function set_value($value, $repopulate = false)
    {
        if ($value[0]) {
            $this->checked = 1;
        } else {
            $this->checked = 0;
        }
        $this->value = $value[1];
        $this->value1 = $value[1];
        $this->value2 = $value[2];
    }

    public function add_rule($callback)
    {
        return parent::add_rule($callback); // TODO: Change the autogenerated stub
    }

    public function fields()
    {
        return array_values($this->fields);
    }

    public function set_fieldset(\Fuel\Core\Fieldset $fieldset)
    {
        foreach ($this->fields as $field) {
            $field->set_fieldset($fieldset);
        }
        return parent::set_fieldset($fieldset);
    }

    public function children()
    {
        $children = [];
        return $this->fields();
    }

}